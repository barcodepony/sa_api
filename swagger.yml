swagger: "2.0"
info:
  description: This is the swagger_ui for the Task 4
  version: "1.0.1"
  title: SA TASK_04 API - GROUP_10
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application
paths:
  /favs:
    get:
      operationId: calls.favs.read_all
      tags:
        - Favs
      summary: The Favs data structure supported by the server application
      description: Read the list of Favourites
      responses:
        200:
          description: Successful list favs operations
          schema:
            type: object
            properties:
              f_id:
                type: integer
              f_category:
                type: string
              f_name:
                type: string
              f_poi:
                type: string
              f_label:
                type: string
    post:
      operationId: calls.favs.create_one
      tags:
        - Favs
      summary: The Favs data structure supported by the server application
      description: Create a Favourite
      parameters:
        - name: favourite
          in: body
          required: True
          schema:
            type: object
            properties:
              f_category:
                type: string
              f_name:
                type: string
              f_poi:
                type: string
              f_label:
                type: string
      responses:
        200:
          description: Successful added Favourite-Creation to Queue


  /favs/{f_id}:
    get:
      operationId: calls.favs.read_one
      tags:
        - Favs
      summary: Reads one Fav by ID
      description: Read one Favourite by ID
      parameters:
        - name: f_id
          in: path
          description: ID of the fav to get from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful read the fav from list operation
          schema:
            properties:
              f_id:
                type: integer
              f_category:
                type: string
              f_name:
                type: string
              f_poi:
                type: string
              f_label:
                type: string
    delete:
      operationId: calls.favs.delete_one
      tags:
        - Favs
      summary: Delete one Fav by ID
      description: Delete one Favourite by ID
      parameters:
        - name: f_id
          in: path
          description: ID of the fav to delete from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful delete the fav from list operation

    put:
      operationId: calls.favs.update_one
      tags:
        - Favs
      summary: Updates one Fav by ID
      description: Updates one Fav by ID
      parameters:
        - name: f_id
          in: path
          description: The ID of the Fav to update
          type: string
          required: True
        - name: favourite
          in: body
          required: True
          schema:
            type: object
            properties:
              #f_id:
              #  type: integer
              f_category:
                type: string
              f_name:
                type: string
              f_poi:
                type: string
              f_label:
                type: string
      responses:
        200:
          description: Successfully added Favourite-Update with ID to the Queue


  /pois:
    get:
      operationId: calls.pois.read_all
      tags:
        - Pois
      summary: The Pois data structure supported by the server application
      description: Read the list of Pois
      responses:
        200:
          description: Successful list pois operations
          schema:
            type: array
            items:
              properties:
                p_id:
                  type: integer
                p_lon:
                  type: number
                p_lat:
                  type: number
                p_name:
                  type: string
                p_amenity:
                  type: string

    post:
      operationId: calls.pois.create_one
      tags:
        - Pois
      summary: The PoI data structure supported by the server application
      description: Create a PoI
      parameters:
        - name: poi
          in: body
          required: True
          schema:
            type: object
            properties:
              p_id:
                type: integer
              p_lon:
                type: number
              p_lat:
                type: number
              p_name:
                type: string
              p_amenity:
                type: string
      responses:
        200:
          description: Successful added PoI-Creation to Queue

  /pois/{p_id}:
    get:
      operationId: calls.pois.read_one
      tags:
        - Pois
      summary: The Poi data structure supported by the server application
      description: Read one PoI by ID
      parameters:
        - name: p_id
          in: path
          description: ID of the poi to get from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful list pois operations
          schema:
            properties:
              p_id:
                type: integer
              p_lon:
                type: number
              p_lat:
                type: number
              p_name:
                type: string
              p_amenity:
                type: string
    delete:
      operationId: calls.pois.delete_one
      tags:
        - Pois
      summary: The Poi data structure supported by the server application
      description: Delete one PoI by ID
      parameters:
        - name: p_id
          in: path
          description: ID of the poi to delete from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful delete pois operations

    put:
      operationId: calls.pois.update_one
      tags:
        - Pois
      summary: Updates one PoI by ID
      description: Updates one PoI by ID
      parameters:
        - name: p_id
          in: path
          description: The ID of the PoI to update
          type: string
          required: True
        - name: poi
          in: body
          required: True
          schema:
            type: object
            properties:
              #f_id:
              #  type: integer
              p_lon:
                type: number
              p_lat:
                type: number
              p_name:
                type: string
              p_amenity:
                type: string
      responses:
        200:
          description: Successfully added PoI-Update with ID to the Queue

  /shops:
    get:
      operationId: calls.shops.read_all
      tags:
        - Shops
      summary: The Shops data structure supported by the server application
      description: Read the list of Shops
      responses:
        200:
          description: Successful list shops operations
          schema:
            type: array
            items:
              properties:
                s_id:
                  type: integer
                s_lon:
                  type: number
                s_lat:
                  type: number
                s_name:
                  type: string
                s_homepage:
                  type: string
                s_category:
                  type: string
                s_amenity:
                  type: string

    post:
      operationId: calls.shops.create_one
      tags:
        - Shops
      summary: The Shops data structure supported by the server application
      description: Create a Shop
      parameters:
        - name: shop
          in: body
          required: True
          schema:
            type: object
            properties:
              s_id:
                type: integer
              s_lon:
                type: number
              s_lat:
                type: number
              s_name:
                type: string
              s_homepage:
                type: string
              s_category:
                type: string
              s_amenity:
                type: string
      responses:
        200:
          description: Successful added Shop-Creation to Queue
  /shops/category:
    get:
      operationId: calls.shops.get_categories
      tags:
        - Category
      summary: Lists all Categories supported by the server application
      description: Lists all Categories supported by the server application
      responses:
        200:
          description: Lists all Categories supported by the server application
          schema:
            type: object
            additionalProperties:
              type: integer



  /shops/{s_id}:
    get:
      operationId: calls.shops.read_one
      tags:
        - Shops
      summary: The Shop data structure supported by the server application
      description: Read one Shop by ID
      parameters:
        - name: s_id
          in: path
          description: ID of the shop to get from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful list Shop operations
          schema:
            properties:
              s_id:
                type: integer
              s_lon:
                type: number
              s_lat:
                type: number
              s_name:
                type: string
              s_homepage:
                type: string
              s_category:
                type: string
              s_amenity:
                type: string
    delete:
      operationId: calls.shops.delete_one
      tags:
        - Shops
      summary: The Shop data structure supported by the server application
      description: Delete one Shop by ID
      parameters:
        - name: s_id
          in: path
          description: ID of the shop to delete from the list
          type: integer
          required: True
      responses:
        200:
          description: Successful delete Shop operations

    put:
      operationId: calls.shops.update_one
      tags:
        - Shops
      summary: Updates one Shops by ID
      description: Updates one Shops by ID
      parameters:
        - name: s_id
          in: path
          description: The ID of the Shops to update
          type: string
          required: True
        - name: shop
          in: body
          required: True
          schema:
            type: object
            properties:
              s_lon:
                type: number
              s_lat:
                type: number
              s_name:
                type: string
              s_homepage:
                type: string
              s_category:
                type: string
              s_amenity:
                type: string
      responses:
        200:
          description: Successfully added s_amenity-Update with ID to the Queue